<?xml version="1.0" ?>
<launch>

  <!-- filename of the topological map  -->
  <arg name="tmap_file"/>
  <!-- pointset of the topological map (its name in the mongo database)  -->
  <arg name="pointset"/>
  <!-- if false load a .tmap2 using the map manager 2, else load a .tmap using the legacy map manager  -->
  <arg name="legacy" default="false"/>
  <!-- What action is being used for move_base -->
  <arg name="move_base_name" default="move_base"/>
  <!-- The planner being used by move_base. STRANDS systems tend to use DWAPlannerROS Jackal and HSR TrajectoryPlannerROS.  -->
  <arg name="move_base_planner" default="move_base/DWAPlannerROS"/>

  <node pkg="robot_pose_publisher" type="robot_pose_publisher" name="robot_pose_publisher"/>	

  <!-- The -f arg tells the legacy map manager to load the tmap directly from its file, rather than mongodb. If loading from mongodb pass the pointset. 
       Map manager 2 loads the tmap2 from its file only (does not support mongodb). -->
  <node pkg="topological_navigation" type="map_manager.py" name="topological_map_manager" args="-f $(arg tmap_file)" respawn="true" if="$(arg legacy)"/>
  <node pkg="topological_navigation" type="map_manager2.py" name="topological_map_manager" args="$(arg tmap_file)" respawn="true" unless="$(arg legacy)"/>

  <node pkg="topological_navigation" name="topological_localisation" type="localisation.py" output="screen" respawn="true"/>
        
  <node pkg="topological_navigation" name="speed_based_prediction" type="speed_based_prediction.py" output="screen" respawn="true"/>

  <node pkg="topological_navigation" name="topological_navigation" type="navigation.py" output="screen" respawn="true">
    <param name="move_base_name" type="string" value="$(arg move_base_name)"/>
    <param name="move_base_planner" type="string" value="$(arg move_base_planner)"/>
  </node>

  <node pkg="topological_navigation" type="visualise_map.py" name="visualise_map" respawn="true"/>

</launch>
